plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.5'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'jacoco'
}

group = 'org.dev'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
    finalizedBy jacocoTestReport  // 테스트 후 Jacoco 리포트 생성
}

jacoco {
    toolVersion = "0.8.9"  // Jacoco 버전 지정
}

jacocoTestReport {
    reports {
        xml.required = true
        html.required = true
    }

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {]
            fileTree(dir: it, includes: ['**/*.class'], excludes: [
                    '**/org/dev/nlogic/NlogicApplication.class',
                    '**/org/dev/nlogic/health/HealthController.class'
            ])
        }))
    }
}

// 커버리지 체크 규칙
jacocoTestCoverageVerification {
    violationRules {
        rule {
            element = 'CLASS'
            excludes = [
                    'org.dev.nlogic.NlogicApplication',
                    'org.dev.nlogic.health.HealthController'
            ]
            limit {
                minimum = 0.80  // 최소 80% 커버리지 요구
            }
        }
    }
}